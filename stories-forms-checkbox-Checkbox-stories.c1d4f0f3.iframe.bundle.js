"use strict";(self.webpackChunkthe_next=self.webpackChunkthe_next||[]).push([[200],{"./src/stories/forms/checkbox/Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Color:()=>Color,Default:()=>Default,Disabled:()=>Disabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories}),__webpack_require__("./node_modules/react/index.js");let ck_white=__webpack_require__.p+"static/media/ck-white.0906ef8af32b7584746629d5823669cb.svg";var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");let Checkbox=_ref=>{let{id,disabled=!1,label,value=!1,name,onChange,activeClass="ring-black-500  bg-slate-900 dark:bg-slate-700 dark:ring-slate-700 "}=_ref;return(0,jsx_runtime.jsxs)("label",{className:"flex items-center ".concat(disabled?" cursor-not-allowed opacity-50":"cursor-pointer"),htmlFor:id,children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",className:"hidden",name:name,checked:value,onChange:onChange,id:id,disabled:disabled}),(0,jsx_runtime.jsx)("span",{className:"h-4 w-4 border flex-none border-slate-100 dark:border-slate-800 rounded\n        inline-flex mr-3 rtl:ml-3 relative transition-all duration-150\n        ".concat(value?activeClass+" ring-2 ring-offset-2 dark:ring-offset-slate-800 ":"bg-slate-100 dark:bg-slate-600 dark:border-slate-600","\n        "),children:value&&(0,jsx_runtime.jsx)("img",{src:ck_white,alt:"",className:"h-[10px] w-[10px] block m-auto"})}),(0,jsx_runtime.jsx)("span",{className:"text-sm leading-6 capitalize text-slate-500 dark:text-slate-400",children:label})]})};try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},value:{defaultValue:{value:"false"},description:"",name:"value",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(() => void)"}},activeClass:{defaultValue:{value:"ring-black-500  bg-slate-900 dark:bg-slate-700 dark:ring-slate-700"},description:"",name:"activeClass",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/checkbox/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"src/components/checkbox/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}let Checkbox_stories={title:"Forms/Checkbox",component:Checkbox,parameters:{layout:"centered",componentSubtitle:"체크박스",docs:{description:{component:"사용자가 하나 이상의 옵션을 선택하거나 해제할 때 사용합니다."}}},tags:["autodocs"],argTypes:{id:{description:"아이디"},disabled:{description:"비활성화 여부"},label:{description:"라벨"},value:{description:"선택 여부"},name:{description:"인풋명"},onChange:{description:"선택 상태 변경시 발생 이벤트"},activeClass:{description:"선택 상태 스타일"}}},Default={args:{id:"defaultCheckbox",label:"체크박스입니다.",value:!0}},Basic=()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-4",children:[(0,jsx_runtime.jsx)(Checkbox,{label:"Checked",value:!0,onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"UnChecked",value:!1,onChange:()=>{}})]});Basic.args={...Basic.args};let Disabled=()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-4",children:[(0,jsx_runtime.jsx)(Checkbox,{label:"Checked disabled",disabled:!0,value:!0,onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"UnChecked disabled",disabled:!0,value:!1,onChange:()=>{}})]});Disabled.args={...Disabled.args};let Color=()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-4",children:[(0,jsx_runtime.jsx)(Checkbox,{label:"Primary",value:!0,activeClass:"ring-primary-500 bg-primary-500",onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"Secondary",value:!0,activeClass:"ring-secondary-500 bg-secondary-500",onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"Success",value:!0,activeClass:"ring-success-500 bg-success-500",onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"Danger",value:!0,activeClass:"ring-danger-500 bg-danger-500",onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"Warning",value:!0,activeClass:"ring-warning-500 bg-warning-500",onChange:()=>{}}),(0,jsx_runtime.jsx)(Checkbox,{label:"Info",value:!0,activeClass:"ring-info-500 bg-info-500",onChange:()=>{}})]});Color.args={...Color.args},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "defaultCheckbox",\n    label: "체크박스입니다.",\n    value: true\n  }\n}',...Default.parameters?.docs?.source}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'() => <div className="flex flex-wrap gap-4">\n    <Checkbox label="Checked" value={true} onChange={() => {}} />\n    <Checkbox label="UnChecked" value={false} onChange={() => {}} />\n  </div>',...Basic.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'() => <div className="flex flex-wrap gap-4">\n    <Checkbox label="Checked disabled" disabled value={true} onChange={() => {}} />\n    <Checkbox label="UnChecked disabled" disabled value={false} onChange={() => {}} />\n  </div>',...Disabled.parameters?.docs?.source}}},Color.parameters={...Color.parameters,docs:{...Color.parameters?.docs,source:{originalSource:'() => <div className="flex flex-wrap gap-4">\n    <Checkbox label="Primary" value={true} activeClass="ring-primary-500 bg-primary-500" onChange={() => {}} />\n    <Checkbox label="Secondary" value={true} activeClass="ring-secondary-500 bg-secondary-500" onChange={() => {}} />\n    <Checkbox label="Success" value={true} activeClass="ring-success-500 bg-success-500" onChange={() => {}} />\n    <Checkbox label="Danger" value={true} activeClass="ring-danger-500 bg-danger-500" onChange={() => {}} />\n    <Checkbox label="Warning" value={true} activeClass="ring-warning-500 bg-warning-500" onChange={() => {}} />\n    <Checkbox label="Info" value={true} activeClass="ring-info-500 bg-info-500" onChange={() => {}} />\n  </div>',...Color.parameters?.docs?.source}}};let __namedExportsOrder=["Default","Basic","Disabled","Color"]}}]);